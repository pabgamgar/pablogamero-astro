---
import LocationSVG from "../icons/location.astro";
import ArrowTopLeftSVG from "../icons/arrow-top-left.astro";
import ArrowTopLeft from "../icons/arrow-top-left.astro";
import { Button } from "@/components/ui/button";
import { socials } from "@/lib/data";
import InstaSVG from "@/icons/instagram.astro";
import XSVG from "@/icons/x.astro";
import GithubSVG from "@/icons/github.astro";
import LinkedInSVG from "@/icons/linkedin.astro";

interface Props {
  lang: "en" | "es";
}

const { lang = "en" } = Astro.props;
---

{
  lang == "en" && (
    <div class="content-home content">
      <h1
        class="hero-title text-5xl font-bold h-14"
        data-text="Hello, I'm Pablo!"
      />
      <p
        class="hero-subtitle text-2xl h-4"
        data-text='["Developer", "Entrepreneur", "Student"]'
      />
      <div class="mt-8 text-justify flex flex-col gap-3">
        <p>
          Enthusiast driven by innovation, efficiency, and productivity. With a
          passion for programming and software development, I leverage
          technology to engineer innovative solutions.
        </p>
      </div>
      <div class="flex gap-4 justify-center sm:items-center mt-4 sm:flex-row flex-col">
        <Button
          id="work-CTA"
          className="px-2 py-1 rounded-md text-black flex-grow text-md"
        >
          Work with me
        </Button>
        <div class="flex gap-2 items-center justify-between">
          <a
            href="https://linkedin.com/in/pablogamerogarcia"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <LinkedInSVG />
          </a>
          <a
            href="https://instagram.com/pablogamerogarcia"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <InstaSVG />
          </a>
          <a
            href="https://x.com/pabgamgar"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <XSVG />
          </a>
          <a
            href="https://github.com/pablogg411"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <GithubSVG />
          </a>
        </div>
      </div>
    </div>
  )
}

{
  lang == "es" && (
    <div class="content-home content">
      <h1
        class="hero-title text-5xl font-bold h-14"
        data-text="Hola, ¡soy Pablo!"
      />
      <p
        class="hero-subtitle text-2xl h-4"
        data-text='["Desarrollador", "Emprendedor", "Estudiante"]'
      />
      <div class="mt-8 text-justify flex flex-col gap-3">
        <p>
          Entusiasta impulsado por la innovación, la eficiencia y la
          productividad. Con una pasión por la programación y el desarrollo de
          software, aprovecho la tecnología para diseñar soluciones innovadoras.
        </p>
      </div>
      <div class="flex gap-4 justify-center sm:items-center mt-4 sm:flex-row flex-col">
        <Button
          id="work-CTA"
          className="px-2 py-1 rounded-md text-black flex-grow text-md"
        >
          Trabajemos juntos!
        </Button>
        <div class="flex gap-2 items-center justify-between">
          <a
            href="https://linkedin.com/in/pablogamerogarcia"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <LinkedInSVG />
          </a>
          <a
            href="https://instagram.com/pablogamerogarcia"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <InstaSVG />
          </a>
          <a
            href="https://x.com/pabgamgar"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <XSVG />
          </a>
          <a
            href="https://github.com/pablogg411"
            class="size-10 flex items-center justify-center bg-gradient-to-br from-white/50 to-white/10 shadow-2xl rounded-lg"
          >
            <GithubSVG />
          </a>
        </div>
      </div>
    </div>
  )
}

<style>
  .content-home {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-self: flex-start;
    max-width: 1000px;
    min-width: 500px;
    width: 50%;
    padding: 3rem 2rem;
    margin-block: 2rem;
    height: fit-content;
    margin-left: 5%;
  }

  @media screen and (max-width: 600px) {
    .content-home {
      align-self: center;
      width: 90%;
      margin-left: 0;
      min-width: 300px;
    }
  }

  @media screen and (max-width: 901px) {
    .hero-title {
      height: 98px;
    }
  }
</style>

<script>
  function main() {
    function typingAnimation() {
      const titleElement = document.querySelector(".hero-title") as HTMLElement;
      const data = titleElement.getAttribute("data-text") as string;
      let i = 0;

      function typeCharacter() {
        if (i < data.length) {
          const char = data.charAt(i);
          const span = document.createElement("span");
          span.innerText = char;
          titleElement.appendChild(span);
          i++;

          setTimeout(typeCharacter, 100);
        }
      }

      typeCharacter();
    }

    window.addEventListener("load", typingAnimation);

    function typingAnimation2() {
      const titleElement = document.querySelector(
        ".hero-subtitle"
      ) as HTMLElement;
      const data = JSON.parse(titleElement.getAttribute("data-text") || "[]");
      let wordIndex = 0;
      let charIndex = 0;

      function typeCharacter() {
        const word = data[wordIndex];
        if (charIndex < word.length) {
          const char = word.charAt(charIndex);
          const span = document.createElement("span");
          span.innerText = char;
          titleElement.appendChild(span);
          charIndex++;
          setTimeout(typeCharacter, 100);
        } else {
          setTimeout(eraseCharacter, 1000);
        }
      }

      function eraseCharacter() {
        const word = data[wordIndex];
        if (charIndex > 0) {
          const lastChild = titleElement.lastChild;
          if (lastChild) {
            titleElement.removeChild(lastChild);
          }
          charIndex--;
          setTimeout(eraseCharacter, 50);
        } else {
          titleElement.innerText = "";
          wordIndex = (wordIndex + 1) % data.length;
          setTimeout(typeCharacter, 500);
        }
      }
      setTimeout(typeCharacter, 1750);
    }

    window.addEventListener("load", typingAnimation2);
  }
  main();
</script>
